@model WebComputerAccessories.Models.ViewModel.ProductVM

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="container rounded bg-white mt-5 mb-5">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row justify-content-md-center">
            <div class="col-md-4 border-right">
                <div class="d-flex flex-column align-items-center text-center p-3 py-5">
                    <img id="productImg" class="rounded-circle mt-5" width="150px" height="150px" src="@Model.Image">
                    <span class="font-weight-bold">Hình Ảnh Sản Phẩm</span>
                    <div class="form-group">
                        <div class="col-md-10">
                            <input id="Image" name="Image" type="text" value="@Model.Image" style="display: none;">
                            <input type="file" id="DataImage" class="form-control" data-val="true" name="DataImage" accept="image/*">
                            @Html.ValidationMessageFor(model => model.DataImage, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <span> </span>
                </div>
            </div>
            <div class="col-md-8 border-right">
                <div class="p-3 py-5">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="text-right">Tùy Chinh Sản Phẩm Mới</h4>
                    </div>
                    <div class="row mt-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", @min = "0", @max = "1000" } })
                                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.IdCategory, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-10">
                                @Html.DropDownList("IdCategory", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.IdCategory, "", new { @class = "text-danger" })
                            </div>
                        </div>

                    </div>
                    <div class="mt-5 text-center">
                        <input type="submit" value="Lưu Thay Đổi" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        </div>

    </div>


}

<div>
    @Html.ActionLink("Quay Lại", "Index")
</div>



@section Scripts {
    <script>
        DataImage.onchange = evt => {
            const [file] = DataImage.files;
            if (file) {
                productImg.src = URL.createObjectURL(file);
            }
        }
    </script>
}
